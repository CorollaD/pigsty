---
#==============================================================#
# node provision
#==============================================================#
# 1. node features
# node_disable_numa: false        # [VERY IMPORTANT] disable numa, skip for vm or single CPU setup
# node_disable_swap: true         # [VERY IMPORTANT] disable swap for pg and kubernetes
# node_disable_firewall: true     # disable firewall to allow haproxy and kubernetes
# node_disable_selinux: true      # disable selinux
# node_disk_prefetch: false       # setup disk prefetch on HDD to increase performance

# 2. node kernel
node_kernel_modules: [softdog, br_netfilter, ip_vs, ip_vs_rr, ip_vs_rr, ip_vs_wrr, ip_vs_sh, nf_conntrack_ipv4]

# 3. node tuned
# node_tuned: true                # tune node parameters
# node_sysctl_params: {}          # additional sysctl parameters

# 4. node user
# node_root_setup: false          # setup root user (exchange ssh keys) ?

# 5. node dns
node_dns_setup: true              # setup dns
node_dns_servers: [10.10.10.10]   # nameserver in /etc/resolv.conf
node_dns_hosts:                   # static dns records in /etc/hosts
  - "10.10.10.10 yum.pigsty pigsty"

# 6. node repo
node_local_repo_enabled: true     # whether use local yum repo
node_local_repo_only: true        # whether disable other repos
repo_name: pigsty                 # local repo name
repo_host: yum.pigsty             # local repo host

# 7. node packages
# node_meta_install: false
# node_cloud_install: false
# node_build_install: false
# node_additional_packages: []    # additional rpm packages to be downloaded/installed

# 8. node ntp
node_setup_ntp: true              # setup ntp
node_timezone: 'Asia/Shanghai'    # default node timezone
node_ntp_servers: [10.10.10.10]   # default NTP servers

# 9. node vip
node_setup_vip: true              # setup default vip structure


#==============================================================#
#                     Infra Provision                          #
#==============================================================#
dcs_servers: [10.10.10.10]        # default dcs servers
dcs_type:    consul               # default dcs server type: consul
dcs_purge:   true                 # force remove existing server
consul_dc:   pigsty               # force remove existing server
dcs_check_interval: 15s           # default service check interval
dcs_check_timeout:  1s            # default service check timeout
cloud_native_support: false       # install k8s ?


#==============================================================#
#                      Meta Provision                          #
#==============================================================#
# dns & nginx
consul_domain_name:       c.pigsty            # consul ui domain name
grafana_domain_name:      g.pigsty            # grafana ui domain name
prometheus_domain_name:   p.pigsty            # prometheus ui domain name
alertmanger_domain_name:  am.pigsty           # alertmanager ui domain name
dnsmasq_dns:
  - "10.10.10.2 pg-meta"
  - "10.10.10.3 pg-test"

# prometheus
prometheus_scrape_interval: 2s                # global scrape & evaluation interval
prometheus_scrape_timeout: 1s                 # scrape timeout
prometheus_metrics_path: /metrics             # default metrics path (only for job 'pg')
prometheus_data_dir: /export/prometheus/data  # prometheus data dir
prometheus_retention: 30d                     # how long to keep

# grafana
grafana_force_download_plugins: false         # force redownload grafana plugins
grafana_time_interval: 2s                     # force redownload grafana plugins
grafana_provision_via_db: true                # provision via copy sqlite db by default
grafana_dashboards: []                        # default dashboards
grafana_plugins_install:                      # install grafana plugins ?
grafana_plugins_force_download:               # force re-download grafana plugins ?
grafana_plugins:                              # default grafana plugins list
  - camptocamp-prometheus-alertmanager-datasource
  - simpod-json-datasource
  - ryantxu-ajax-panel
  - jdbranham-diagram-panel
  - grafana-piechart-panel
  - alexandra-trackmap-panel
  - snuids-radar-panel
  - digrich-bubblechart-panel


# meta repostority
repo_use_mirror: true             # use aliyun centos mirror
repo_cloud_native: true           # download cloud native packages ?
repo_build_essential: true        # download build essential packages
repo_force_download: false        # force download even cache exists
repo_proxy_env: {}                # add proxy environment variable here


#==============================================================#
#                   PostgreSQL Provision                       #
#==============================================================#
# default users
pg_dbsu: postgres
pg_dbsu_password: postgres

# unified replication user
pg_replication_username: replicator
pg_replication_password: replicator

# unified monitor user
pg_monitor_username: dbuser_monitor
pg_monitor_password: dbuser_monitor

# monitor options
node_exporter_port: 9100
pg_exporter_port: 9630
pgbouncer_exporter_port: 9631
exporter_metric_path: /metrics

# patroni haproxy vip
patroni_pause: true                     # use maintenance mode by default
pg_lb_enabled: true                     # default load balancer type
pg_lb_vip_enabled: true                 # create vip for load balancer
...
