---
################################################################
#              Variables for meta controller node              #
################################################################

#==============================================================#
# Meta node provision
#==============================================================#
node_overwrite_hostname: false    # rather keep meta node's name

#==============================================================#
# Meta node special variables
#==============================================================#
# install for meta nodes only
meta_package_list:
  - ansible,python,python-pip,python-ipython,python-psycopg2                    # ansible and python environment
  - nginx,haproxy,keepalived,dnsmasq                                            # proxy and dns
  - grafana,prometheus2,pushgateway,alertmanager,node_exporter,nginx_exporter   # monitoring packages

# grafana
meta_grafana_provision_datasources: true        # use pre-defined prometheus data source
meta_grafana_provision_dashboards: false        # use pre-defined postgres dashboards
meta_grafana_provision_plugins: true            # install additional grafana plugins
meta_grafana_force_download_plugins: false      # force redownload grafana plugins


#==============================================================#
# Meta DNS server
#==============================================================#
# DNS record that resolved by DNS server on meta node
meta_dynamic_dns:
  - host: 10.10.10.10       # meta service domain name
    domain: [pigsty, consul.pigsty, grafana.pigsty, prometheus.pigsty, alertmanager.pigsty, admin.pigsty, yum.pigsty]
  - host: 10.10.10.10       # short alias
    domain: [c.pigsty, g.pigsty, p.pigsty, pg.pigsty, am.pigsty, ha.pigsty, k8s.pigsty, k.pigsty]
  - host: 10.10.10.2        # pg-meta default vip
    domain: [pg-meta, haproxy.pg-meta]
  - host: 10.10.10.3        # pg-test default vip
    domain: [pg-test, haproxy.pg-meta]


#==============================================================#
# Meta infra variable: how to setup infrastructure
#==============================================================#
# meta node are used as dcs server and k8s master
infra_dcs_role: server         # meta dcs role: server
infra_k8s_role: master         # meta k8s role: master

#==============================================================#
# MetaDB setup
#==============================================================#
# basic information
cluster: pg-meta                # [REQUIRED] parameter `cluster`
version: 12                     # [REQUIRED] parameter `version`
force: true                     # force removing if cluster already existing (dangerous for production!)

# default database
default_creation:   true        # create default business database and user? (optional)
default_username:   meta        # business passowrd (optional)
default_password:   meta        # business passowrd (optional), may provide via secret files
default_database:   meta        # business username (optional)

# additional component
install_pgbouncer:  true        # install pgbouncer connection pooler ?
install_patroni:    true        # install patroni ha agent ?
install_haproxy:    true        # install haproxy load balancer ?
install_keepalived: true        # install keepalived ?

# pg-meta virtual vip
lb_keepalived_vip: 10.10.10.2   # REQUIRED field virtual vip address
lb_keepalived_nic: eth1          # REQUIRED field nic interface



################################################################
# Meta repo variable: how to build local yum repo
################################################################
# how to download
repo_force_download:   false     # force download even cache exists
repo_proxy_env: {}               # add proxy environment variable here

repo_package_list:
  # postgres core packages
  - postgresql13*
  - postgresql12*
  - postgis30_12*

  # postgres extension packages 12
  - wal2json12,pg_repack12,pg_qualstats12,pg_stat_kcache12,pgrouting_12,pg_cron_12,timescaledb_12,pglogical_12,pgpool-II-12
  # postgres common misc
  - pgbouncer,pgadmin4,pg_top,pgbadger,pgdg-redhat-repo
  # ansible and python environment
  - ansible,python,python-pip,python-ipython,python-psycopg2
  # system utils
  - ntp,chrony,uuid,readline,lz4,nc,pv,jq,vim,make,patch,bash,libxml2,libxslt,lsof,wget,unzip,git,numactl,grubby,zlib,openssl,perl-ExtUtils-Embed
  # network utils
  - bind-utils,net-tools,sysstat,tcpdump,socat,ipvsadm
  # monitoring packages
  - grafana,prometheus2,pushgateway,alertmanager,node_exporter,postgres_exporter,nginx_exporter,blackbox_exporter
  # dcs packages
  - consul,consul_exporter,consul-template,etcd
  # proxy and dns
  - nginx,haproxy,keepalived,dnsmasq

# download necessary url packages
repo_url_package_list:
  - name: pg_exporter-0.2.0-1.el7.x86_64.rpm
    url: https://github.com/Vonng/pg_exporter/releases/download/v0.2.0/pg_exporter-0.2.0-1.el7.x86_64.rpm
  - name: patroni-1.6.5-1.rhel7.x86_64.rpm
    url: https://github.com/cybertec-postgresql/patroni-packaging/releases/download/1.6.5-1/patroni-1.6.5-1.rhel7.x86_64.rpm
  - name: vip-manager_0.6-1_amd64.rpm
    url: https://github.com/cybertec-postgresql/vip-manager/releases/download/v0.6/vip-manager_0.6-1_amd64.rpm

#==============================================================#
# additional packages
#==============================================================#
# additional packages to be downloaded
repo_additional_package_list: []

# download cloud native packages: kubectl kubeadm helm docker, etc..
repo_cloud_native: true
repo_cloud_native_package_list:
  - docker-ce,docker-ce-cli,docker-ce-selinux,cri-tools,kubeadm,kubectl,kubelet,kubernetes-cni,rkt,helm

# download build essential packages: gcc, g++, rpmbuild, etc...
repo_build_essential: true
repo_build_essential_package_list:
  - gcc,gcc-c++,clang,coreutils,diffutils,rpm-build,rpm-devel,rpmlint,rpmdevtools
  - zlib-devel,openssl-libs,openssl-devel,pam-devel,libxml2-devel,libxslt-devel,openldap-devel,systemd-devel,tcl-devel,python-devel
...