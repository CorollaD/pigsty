#!/usr/bin/env ansible-playbook
---
#==============================================================#
# Init a k8s cluster
#==============================================================#
- name: Init local yum repo
  become: yes
  hosts: meta
  gather_facts: true
  tags: repo
  roles:
    - repo                # init local yum repo

- name: Provision all nodes with consul
  become: yes
  hosts: all
  gather_facts: true
  tags: node
  roles:
    - node                # provision all nodes
    - consul              # init consul servers
    - pg_preflight        # check cluster topo and build primary & replica group
    - pg_install          # install postgres packages, create users and dir

- name: Init meta node
  become: yes
  hosts: meta
  gather_facts: true
  tags: init-meta
  roles:
    - meta                # meta provision setup

- name: Init pg-meta database cluster on meta node(s)
  become: yes
  hosts: meta
  tags: init-meta
  roles:
    # pre-flight & install
    - pg_preflight                  # check cluster topo and build primary & replica group
    - pg_install                    # install postgres packages, create users and dir

    # init primary
    - role: pg_primary                    # init primary instance
      when: role == 'primary'

    # init replica
    - role: pg_replica                    # init replica instance
      when: role != 'primary'

    # init pgbouncer
    - pg_pgbouncer                  # init connection pool

    # init ha agent (optional)
    - role: pg_patroni                    # init ha agent patroni
      when: ha_enabled

    # install load balancer (optional)
    - role: pg_proxy                      # haproxy and keepalived
      when: lb_enabled

    # deploy and register monitor service
    - pg_monitor                    # init monitoring system



- name: Init pg-test database
  become: yes
  hosts: test
  tags: init-test
  roles:

    # pre-flight & install
    - pg_preflight                  # check cluster topo and build primary & replica group
    - pg_install                    # install postgres packages, create users and dir

    # init primary
    - role: pg_primary                    # init primary instance
      when: role == 'primary'

    # init replica
    - role: pg_replica                    # init replica instance
      when: role != 'primary'

    # prepheral: pool, ha, proxy, monitor
    - pg_pgbouncer                  # init connection pool
    - pg_patroni                    # init ha agent patroni

    # install load balancer if enabled
    - role: pg_proxy                      # haproxy and keepalived
      when: lb_enabled == true

    # deploy and register monitor service
    - pg_monitor                    # init monitoring system


...