---
#==============================================================#
# Setup kubernetes
#==============================================================#
- name: Bootstrap kubernetes master node
  when: k8s_role == 'master'
  tags: k8s_master
  block:
    # kubelet default options
    - name: Config kubelet default options
      template: src=kubelet.default dest=/etc/default/kubelet

    #==============================================================#
    # matster kubeadm init
    #==============================================================#
    # kubeadm init
    - name: Kubeadm config images pull test
      ignore_errors: true
      command: kubeadm config images pull \
                --image-repository={{ k8s_registry_mirrors }} \
                --kubernetes-version={{ k8s_version }}

    - name: Kubeadm init kubeternetes master
      command: kubeadm init \
                --image-repository={{ k8s_registry_mirrors }} \
                --kubernetes-version={{ k8s_version }}
                --apiserver-advertise-address={{ inventory_hostname }}   \
                --pod-network-cidr={{ k8s_pod_cidr }} \
                --service-cidr={{ k8s_service_cidr }}

    #==============================================================#
    # matster kubelet init
    #==============================================================#
    # enable kubelet
    - name: Enable kubelet service unit
      systemd: name=kubelet enabled=yes daemon_reload=yes


    #==============================================================#
    # matster kubectl init
    #==============================================================#
    # setup kubectl for root
    - name: Setup kubeconfig for root user
      command: "{{ item }}"
      with_items:
       - mkdir -p /root/.kube
       - cp -i /etc/kubernetes/admin.conf /root/.kube/config
       - chown root:root /root/.kube/config

    # setup kubectl for vagrant (optional)
    - name: Setup kubeconfig for vagrant user
      ignore_errors: true
      command: "{{ item }}"
      with_items:
       - mkdir -p /home/vagrant/.kube
       - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
       - chown vagrant:vagrant /home/vagrant/.kube/config


    #==============================================================#
    # kubernetes network add-on setup
    #==============================================================#
    # install add-on: calico and dashboard
    - name: Copy calio and k8s dashboard yml
      copy: src={{ item }} dest=/tmp/{{ item }}
      with_items:
        - calico.yaml
        - dashboard.yaml

    # https://docs.projectcalico.org/manifests/calico.yaml
    - name: Install calico pod network addon
      command: kubectl apply -f /tmp/calico.yaml

    # https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
    - name: Install kubernetes dashboard
      command: kubectl apply -f /tmp/dashboard.yaml


    #==============================================================#
    # kubernetes dashboard add-on setup
    #==============================================================#
    # create dashboard sa service account default:dashboard-admin-sa (as role cluster-admin)
    - name: Create kubernetes-dashboard user
      command: "{{ item }}"
      with_items:
       - kubectl create serviceaccount {{ k8s_dashboard_admin_user }}
       - kubectl create clusterrolebinding {{ k8s_dashboard_admin_user }} --clusterrole=cluster-admin --serviceaccount=default:{{ k8s_dashboard_admin_user }}


    #==============================================================#
    # copy credential to current controller (KEEP IT SECRET)
    #==============================================================#
    # join master scripts (used by k8s nodes)h
    - name: Generate kubernetes join scripts
      command: kubeadm token create --print-join-command
      register: k8s_join_command
    - name: Copy join command to local file
      become: no
      local_action: copy content="{{ k8s_join_command.stdout_lines[0] }}" dest="files/join.sh"

    # admin config is used by kubectl
    - name: Cat /etc/kubernetes/admin.conf
      command: cat /etc/kubernetes/admin.conf
      register: k8s_admin_config
    - name: Copy admin.conf to local file
      become: no
      local_action: copy content="{{ k8s_admin_config.stdout }}" dest="files/admin.config"

    # admin token can be used to access dashboard
    - name: Get kubernetes admin token
      shell: |
        kubectl get secret $(kubectl get sa dashboard-admin-sa -o jsonpath="{.secrets[0].name}") -o jsonpath="{.data.token}" | base64 --decode
      register: k8s_admin_token
    - name: Copy admin token to local file
      become: no
      local_action: copy content="{{ k8s_admin_token.stdout }}" dest="files/admin.token"


#==============================================================#
# join other nodes to kube master
#==============================================================#
- name: Bootstrap kubernetes master node
  when: k8s_role != 'master'
  tags: k8s_nodes
  block:
    - name: Execute join.sh command on nodes
      script: join.sh

    #==============================================================#
    # nodes kubelet init
    #==============================================================#
    - name: Enable node kubelet service
      systemd: name=kubelet enabled=yes daemon_reload=yes
...
