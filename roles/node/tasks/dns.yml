---

# update node hostname if specified via host variable
- name: Update node name
  tags: node_name
  when: nodename is defined
  block:
    - name: Update node hostname
      hostname: name="{{ nodename }}"

    - name: Add new hostname to /etc/hosts
      lineinfile: path=/etc/hosts line="{{ inventory_hostname }} {{ nodename }}"


# always write static DNS record
- name: Write static dns records
  tags: node_dns
  lineinfile: path=/etc/hosts line="{{ item }}"
  with_items: "{{ node_dns_hosts }}"


# add static nameserver to resolv (if node_dns_server != 'none')
- name: Setup dns resolver
  tags: node_resolv
  when: node_dns_server is defined and node_dns_server != 'none'
  block:
    - name: Get old nameservers
      when: node_dns_server == 'add'
      shell: grep -E '^nameserver' /etc/resolv.conf  | grep -Eo '[0-9\.]+' | head -n3
      register: old_nameservers

    - name: Truncate resolv file
      shell: echo -n "" > /etc/resolv.conf

    - name: Write resolv options
      shell: echo {{ item }} >> /etc/resolv.conf
      with_items: "{{ node_dns_options }}"

    - name: Add new nameservers
      shell: echo "nameserver {{ item }}" >> /etc/resolv.conf
      with_items: "{{ node_dns_servers }}"

    - name: Append old nameservers
      shell: echo "nameserver {{ item }}" >> /etc/resolv.conf
      with_items: "{{ old_nameservers.stdout_lines }}"
      when: node_dns_server == 'add' and item not in node_dns_servers

    # - prevent /etc/resolv.conf overwrite after server reboot - #
    - name: Stop network manager
      systemd: name=NetworkManager state=stopped enabled=no


# switch to static network to avoid DNS resolver overwrite
- name: Setup static network
  tags: node_network
  when: node_dns_server is defined and node_dns_server != 'none'
  block:
    # change ifcfg no overwrite
    - name: Find all network interface
      find:
        paths: /etc/sysconfig/network-scripts
        recurse: no
        patterns: "ifcfg-*"
      register: ifcfg_list

    - name: Add peerdns=no to ifcfg
      lineinfile:
        state=present
        create=no
        dest={{ item.path }}
        regexp="^PEERDNS=.*"
        line="PEERDNS=no"
      with_items: "{{ ifcfg_list.files }}"
