---

#==============================================================#
# Stage 1: Root ssh access (optional)
#==============================================================#
- name: Node root ssh key exchange
  when: node_root_setup
  tags: node_root
  block:
    # root ssh-key gen
    - name: Generate os root user ssh key
      user: name=root generate_ssh_key=yes

    # ssh config for root
    - name: Add no host checking to ssh config
      copy: src=ssh.config dest=/root/.ssh/config mode=0600 owner=root

    # root ssh-key exchange
    - name: Fetch root user's public keys
      shell: cat /root/.ssh/id_rsa.pub
      register: root_ssh_keys

    # exchange root ssh-key (may be dangerous)
    - name: Exchange root ssh keys in cluster
      ignore_errors: true
      authorized_key: user=root key="{{ item[0] }}"w
      delegate_to: "{{ item[1] }}"
      with_nested:
        - "{{ root_ssh_keys.stdout }}"
        - "{{ play_hosts }}"


#==============================================================#
# Stage 2: Create default users/groups
#==============================================================#
- name: Create node users and groups
  tags: node_user
  block:
    - name: Create os admin user group admin
      group: name=admin
    - name: Create os dbsu user group postgres
      group: name=postgres
    - name: Create os user postgres:admin
      user: name=postgres group=admin home=/home/postgres generate_ssh_key=yes
    - name: Create os user prometheus:admin
      user: name=prometheus group=admin create_home=no
    - name: Create os dcs user consul:admin
      user: name=consul group=admin create_home=no
    - name: Create os dcs user etcd:admin
      user: name=etcd group=admin create_home=no

    - name: Allow dbsu postgres nopass sudo
      copy:
        content: "postgres ALL=(ALL) NOPASSWD: ALL"
        dest: /etc/sudoers.d/postgres
        mode: 0440

    # ssh config for postgres
    - name: Add no host checking to ssh config
      copy: src=ssh.config dest=/home/postgres/.ssh/config mode=0600 owner=postgres

    # postgres ssh-key exchange
    - name: Fetch all postgres public keys
      shell: cat /home/postgres/.ssh/id_rsa.pub
      register: postgres_ssh_keys

    # for all hosts, copy their postgres ssh public key to each other
    - name: Exchange postgres user's ssh keys
      authorized_key: user=postgres key="{{ item[0] }}"
      ignore_errors: true
      delegate_to: "{{ item[1] }}"
      with_nested:
        - "{{ postgres_ssh_keys.stdout }}"
        - "{{ play_hosts }}"

    - name: Let postgres own /dev/watchdog
      shell: |
        [ -a /dev/watchdog ] && chown postgres:admin /dev/watchdog


#==============================================================#
# Stage 3: Create default user profile
#==============================================================#
- name: Copy default user bash profile
  tags: node_profile
  copy: src=profile.sh dest=/etc/profile.d/profile.sh mode=755


#==============================================================#
# Stage 4: Setup pam ulimit for node users
#==============================================================#
- name: Setup node default pam ulimits
  tags: node_ulimit
  copy: src=limits.conf dest=/etc/security/limits.d/limits.conf mode=0644
...
