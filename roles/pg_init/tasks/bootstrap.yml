---
#==============================================================#
# Bootstrap primary instance (create system users)
#==============================================================#
- name: Create replication and monitor users
  tags: pg_bootstrap
  become_user: "{{ pg_dbsu }}"
  when: pg_role == 'primary'
  block:
    #==============================================================#
    # Create default replication user
    #==============================================================#
    - name: Create postgres replication user
      postgresql_user:
        db: postgres
        name: "{{ pg_replication_username }}"
        password: "{{ pg_replication_password }}"
        role_attr_flags: REPLICATION,LOGIN,NOINHERIT

    - name: Alter dbsu default password
      postgresql_user:
        db: postgres
        name: "{{ pg_dbsu }}"
        password: "{{ pg_dbsu_password }}"
        role_attr_flags:  SUPERUSER,CREATEROLE,CREATEDB,REPLICATION,BYPASSRLS

    - name: Grant function usage to replicator
      postgresql_privs:
        db: postgres
        state: present
        type: function
        privs: EXECUTE
        obj: "{{ item }}"
        roles: "{{ pg_replication_username }}"
        schema: pg_catalog
      with_items:
        - "pg_ls_dir(text:boolean:boolean)"
        - "pg_stat_file(text:boolean)"
        - "pg_read_binary_file(text)"
        - "pg_read_binary_file(text:bigint:bigint:boolean)"


    #==============================================================#
    # Create default monitor user
    #==============================================================#
    - name: Create cluster default monitor user
      postgresql_user:
        db: postgres
        name: "{{ pg_monitor_username }}"
        password: "{{ pg_monitor_password }}"
        role_attr_flags: LOGIN,INHERIT
        groups: pg_monitor


    #==============================================================#
    # Test replication user connectivity
    #==============================================================#
    # write replicator password to local pgpass
    - name: Create pgpass with replication user
      copy:
        content: |
          *:*:*:{{ pg_replication_username }}:{{ pg_replication_password }}
        dest: "{{ pg_dbsu_home }}/.pgpass"
        mode: 0600

    # check replicator is able to connect
    - name: Check replication user connectivity
      command: psql -w -U {{ pg_replication_username }} -d postgres \
        -h {{ pg_cluster_primary }} -p {{ pg_port }} -Atc 'SELECT 1;'

...