---
################################################################
# create default database
################################################################
- name: Create default database and user
  tags: pg_createdb
  when: pg_role == 'primary'
  become_user: postgres
  block:
    #==============================================================#
    # default user
    #==============================================================#
    - name: Create default business admin user
      postgresql_user:
        db: postgres
        name: "{{ pg_default_username }}"
        password: "{{ pg_default_password }}"
        role_attr_flags: LOGIN,INHERIT
        groups: dbrole_admin

    #==============================================================#
    # default database
    #==============================================================#
    - name: Create default business database
      when: pg_default_database != 'postgres'
      postgresql_db:
        db: "{{ pg_default_database }}"
        owner: "{{ pg_default_username }}"
        encoding: UTF-8
        lc_collate: C
        lc_ctype: C

    #==============================================================#
    # check default access
    #==============================================================#
    # add default user/pass to pgpass
    - name: Create pgpass with business userinfo
      lineinfile:
        path: /home/postgres/.pgpass
        line: "*:*:*:{{ pg_default_username }}:{{ pg_default_password }}"
        create: yes

    - name: Check business database connectivity
      become_user: postgres
      shell: psql -w -U {{ pg_default_username }} -d {{ pg_default_database }} -Atc 'SELECT 1;'


    #==============================================================#
    # default database initialize
    #==============================================================#
    - name: Render template scripts to remote
      copy: src={{ item }} dest=/pg/tmp/{{ item }}
      with_items: "{{ pg_template_scripts }}"

    - name: Provision default database scripts
      command: psql {{ pg_default_database }} -w -f /pg/tmp/{{ item }}
      with_items: "{{ pg_default_scripts }}"


...