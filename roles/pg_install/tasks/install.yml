---
- name: Install postgres
  tags: pg_install
  block:

    #==============================================================#
    # Stage 1: Install Postgres Official Repo                      #
    #==============================================================#
    - name: Install offical pgdg yum repo
      when: use_pgdg
      yum: name="https://yum.postgresql.org/{{ version }}/redhat/rhel-{{ ansible_distribution_major_version }}Server-x86_64/pgdg-redhat-repo-latest.noarch.rpm"

    #==============================================================#
    # Stage 2: Calculate packages to be installed                  #
    #==============================================================#
    - name: Listing packages to be installed
      set_fact:
        pg_package_list:
          - 'postgresql{{ version }}*'
          - pgbouncer
          - patroni
          - pg_exporter

        postgis_package_list:
          - postgis{{ postgis_version }}_{{ version }}
          - postgis{{ postgis_version }}_{{ version }}-client
          - postgis{{ postgis_version }}_{{ version }}-devel
          - postgis{{ postgis_version }}_{{ version }}-utils
          - pgrouting_{{ version }}

        extensions_package_list:
          - pg_repack{{ version }}
          - wal2json{{ version }}
          - pg_repack{{ version }}
          - pg_qualstats{{ version }}
          - pg_stat_kcache{{ version }}
          - pg_cron_{{ version }}
          - timescaledb_{{ version }}
          - pglogical_{{ version }}

    - name: Add postgis packages to checklist
      when: postgis and version|int <= 12
      set_fact: pg_package_list="{{ pg_package_list + postgis_package_list }}"

    - name: Add extension packages to checklist
      when: extensions and version|int <= 12
      set_fact: pg_package_list="{{ pg_package_list + extensions_package_list }}"


    #==============================================================#
    # Stage 3: Install postgres packages                           #
    #==============================================================#
    - name: Print packages to be installed
      debug:
        var: pg_package_list
    - name: Install postgres major version
      command: yum install -q -y 'postgresql{{ version }}*'
    - name: Install postgres according to list
      yum: name={{ pg_package_list }}

    #==============================================================#
    # Stage 4: Enable current version                              #
    #==============================================================#
    - name: Link /usr/pgsql to current version
      file: src="/usr/pgsql-{{ version }}" dest=/usr/pgsql state=link
    - name: Add /usr/ppgsql to profile path
      copy:
        content: "export PATH=/usr/pgsql/bin:/pg/bin:$PATH"
        dest: /etc/profile.d/pgsql.sh
    - name: Check installed pgsql version
      shell: |
        [[ $(/usr/pgsql/bin/pg_ctl --version) == "pg_ctl (PostgreSQL) ${version}"* ]]


    #==============================================================#
    # Stage 5: Copy service file
    #==============================================================#
    - name: Copy postgres systemd service file
      template:
        src: postgres.service
        dest: /usr/lib/systemd/system/postgres.service

    - name: Daemon reload postgres service
      systemd: name=postgres state=stopped enabled=no daemon_reload=yes

...