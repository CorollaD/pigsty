---
################################################################
# PHASE 1: Setup PgExporter
################################################################
- name: Setup pg_exporter
  tags: pg_exporter
  block:
    - name: Create /etc/pg_exporter conf dir
      file: path=/etc/pg_exporter state=directory owner=prometheus group=postgres mode=0775

    - name: Copy default pg_exporter.yaml
      copy: src=pg_exporter.yaml dest=/etc/pg_exporter/pg_exporter.yaml owner=postgres group=postgres mode=0644

    - name: Config /etc/default/pg_exporter
      template: src=pg_exporter.default dest=/etc/default/pg_exporter owner=postgres group=postgres mode=0600

    - name: Config pg_exporter service unit
      copy: src=pg_exporter.service dest=/usr/lib/systemd/system/pg_exporter.service

    - name: Launch pg_exporter systemd service
      systemd: name=pg_exporter state=restarted enabled=yes daemon_reload=yes

    - name: Wait for pg_exporter service online
      wait_for: host=localhost port={{ pg_exporter_port }} state=started



################################################################
# PHASE 2: Setup PgbouncerExporter
################################################################
- name: Setup pgbouncer_exporter
  tags: pgbouncer_exporter
  block:
    - name: Config pgbouncer_exporter opts
      template: src=pgbouncer_exporter.default dest=/etc/default/pgbouncer_exporter owner=postgres group=postgres mode=0600

    - name: Config pgbouncer_exporter service
      copy: src=pgbouncer_exporter.service dest=/usr/lib/systemd/system/pgbouncer_exporter.service

    - name: Launch pgbouncer_exporter service
      systemd: name=pgbouncer_exporter state=restarted enabled=yes daemon_reload=yes

    - name: Wait for pgbouncer_exporter online
      wait_for: host=localhost port={{ pgbouncer_exporter_port }} state=started



################################################################
# PHASE 3: Setup Node Exporter
################################################################
- name: Setup node_exporter
  tags: [node_exporter]
  block:
    - name: Copy node_exporter systemd service
      copy: src=node_exporter.service dest=/usr/lib/systemd/system/node_exporter.service

    - name: Config default node_exporter options
      template: src=node_exporter.default dest=/etc/default/node_exporter

    - name: Launch node_exporter service unit
      systemd: name=node_exporter state=restarted enabled=yes daemon_reload=yes

    - name: Wait for node_exporter online
      wait_for: host=localhost port={{ node_exporter_port }} state=started timeout=10



################################################################
# PHASE 4: [register] monitoring services
################################################################
- name: Register postgres service
  tags: pg_register
  block:
    - name: Register postgres monitoring service
      tags: pg_register
      template:
        src: "{{ item }}.json"
        dest: /etc/consul.d/{{ item }}.json
        owner: consul
        group: postgres
        mode: 0660
      with_items:
        - node-meta
        - srv-postgres
        - srv-pgbouncer
        - srv-node-exporter
        - srv-pg-exporter
        - srv-pgbouncer-exporter

    - name: Register patroni service if enabled
      when: lb_enabled
      template:
        src: "{{ item }}.json"
        dest: /etc/consul.d/{{ item }}.json
        owner: consul
        group: postgres
        mode: 0660
      with_items:
        - srv-patroni

    - name: Register load balancer service
      when: lb_enabled
      template:
        src: "{{ item }}.json"
        dest: /etc/consul.d/{{ item }}.json
        owner: consul
        group: postgres
        mode: 0660
      with_items:
        - srv-haproxy
        - srv-cluster-primary
        - srv-cluster-replica

    - name: Restart consul to reload node-meta
      systemd: name=consul state=restarted enabled=yes daemon_reload=yes

...