#!/usr/bin/ansible-playbook
---
#==============================================================#
# Stage 1: Patroni install (already installed during pg_install)
#==============================================================#
- name: Install patroni
  tags: patroni_install
  yum: name=patroni

#==============================================================#
# Stage 2: Clean up patroni
#==============================================================#
- name: Cleanup Patroni
  tags: patroni_cleanup
  block:
    - name: Disable existing patroni services
      ignore_errors: true
      systemd: name=patroni state=stopped enabled=no

    # only remove dcs meta when clean primary patroni
    - name: Remove patroni consul metadata
      when: pg_role == 'primary' and dcs_type == 'consul'
      ignore_errors: true
      command: consul kv delete -recurse {{ patroni_namespace }}/{{ pg_cluster }}


#==============================================================#
# Stage 3: Setup patroni service
#==============================================================#
- name: Setup Patroni
  tags: patroni_setup
  block:
    #==============================================================#
    # Calculate patroni mem settings
    #==============================================================#
    - name: Get config parameter page count
      command: getconf _PHYS_PAGES
      register: node_page_count  # half mem in pages

    - name: Get config parameter page size
      shell: getconf PAGE_SIZE
      register: node_page_size  # half mem in bytes

    - name: Tune shared buffer and work mem
      connection: local
      set_fact:   # max shared-buffer 32GB | max maintainance work mem 8GB
        pg_shared_buffers_bytes: "{{ ([((node_page_count.stdout|int) * (node_page_size.stdout|int) / 4) , 34359738368] | min)|int }}"
        pg_maintenance_work_mem_bytes: "{{ ([((node_page_count.stdout|int) * (node_page_size.stdout|int) / 16) , 8589934592] | max)|int }}"

    - name: Hanlde small size mem occasion
      connection: local
      when: pg_shared_buffers_bytes|int < 1073741824  # < 1GB
      set_fact:
        pg_shared_buffers: "256MB"
        pg_maintenance_work_mem: "64MB"

    - name: Calculate postgres mem params
      connection: local
      when: pg_shared_buffers_bytes|int >= 1073741824  # >= 1GB
      set_fact:
        pg_shared_buffers: "{{ (pg_shared_buffers_bytes|int / 1073741824)|round(0)|int }}GB"
        pg_maintenance_work_mem: "{{ (pg_maintenance_work_mem_bytes|int / 1048576)|round(0)|int }}MB"


    #==============================================================#
    # Config patroni
    #==============================================================#
    - name: Copy default /pg/conf/patroni.yml
      template:
        src: "patroni.yml"
        dest: "/pg/conf/{{ pg_instance }}.yml"
        owner: "{{ pg_dbsu }}"
        group: postgres
        mode: 0755

    - name: Link /pg/conf/patroni to /pg/bin/
      file:
        src: /pg/conf/{{ pg_instance }}.yml
        dest: /pg/bin/patroni.yml
        owner: "{{ pg_dbsu }}"
        group: postgres
        state: link

    - name: Copy patroni systemd service unit
      copy:
        src: patroni.service
        dest: /usr/lib/systemd/system/patroni.service
        owner: root
        group: root
        mode: 0644

    - name: Config patroni watchdog support
      when: patroni_watchdog_path is defined and patroni_watchdog_path != ''
      file: path={{ patroni_watchdog_path }} owner={{ pg_dbsu }} group=postgres


#==============================================================#
# Launch patroni primary
#==============================================================#
- name: Launch primary patroni instance
  tags: patroni_primary
  when: pg_role == 'primary'
  block:
    - name: Launch patroni on primary instance
      systemd:
        name: patroni
        state: restarted
        enabled: yes
        daemon_reload: yes

    - name: Wait for patroni primary online
      wait_for: host={{ inventory_hostname }} port={{ patroni_port }} state=started timeout=30


#==============================================================#
# Launch patroni replica
#==============================================================#
- name: Launch replica patroni instance
  tags: patroni_replica
  when: pg_role != 'primary'
  block:
    - name: Launch patroni on replica instances
      systemd:
        name: patroni
        state: restarted
        enabled: yes
        daemon_reload: yes

    - name: Wait for patroni replica online
      wait_for: host={{ inventory_hostname }} port={{ patroni_port }} state=started timeout=30


#==============================================================#
# Register patroni service (optional)
#==============================================================#
- name: Register patroni consul service
  tags: patroni_register
  ignore_errors: true
  block:
    - name: Copy patroni service definition
      template:
        src: svc-patroni.json.j2
        dest: /etc/consul.d/svc-patroni.json
        owner: consul
        group: postgres
        mode: 0660

    - name: Reload patroni consul service
      systemd: name=consul state=reloaded


#==============================================================#
# Enter pause mode
#==============================================================#
- name: Pause patroni
  tags: patroni_pause
  ignore_errors: true
  when: patroni_pause and pg_role == 'primary'
  command: patronictl -c /pg/bin/patroni.yml pause

...