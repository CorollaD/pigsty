---
#==============================================================#
# Config Pgbouncer
#==============================================================#
- name: Config pgbouncer
  tags: pgbouncer_config
  block:
    - name: Copy /etc/pgbouncer/pgbouncer.ini
      template: src=pgbouncer.ini.j2 dest=/etc/pgbouncer/pgbouncer.ini owner={{ pg_dbsu }} group=postgres mode=0600

    - name: Copy /etc/pgbouncer/pgb_hba.conf
      template: src=pgb_hba.conf.j2 dest=/etc/pgbouncer/pgb_hba.conf owner={{ pg_dbsu }} group=postgres mode=0600

    # equiv: psql -Atq -U postgres -d postgres -c "SELECT concat('\"', usename, '\" \"', passwd, '\"') FROM pg_shadow WHERE NOT (NOT usesuper AND userepl)" > /etc/pgbouncer/userlist.txt
    - name: Generate pgbouncer userlist.txt
      shell: |
        md5_mon_pass="md5$(echo -n '{{ pg_monitor_password }}{{ pg_monitor_username }}' | md5sum | awk '{print $1}')"
        md5_biz_pass="md5$(echo -n '{{ pg_default_password }}{{ pg_default_username }}' | md5sum | awk '{print $1}')"
        echo '"postgres" ""' > /etc/pgbouncer/userlist.txt
        echo \"{{ pg_monitor_username }}\" \"${md5_mon_pass}\" >> /etc/pgbouncer/userlist.txt
        echo \"{{ pg_default_username }}\" \"${md5_biz_pass}\" >> /etc/pgbouncer/userlist.txt
        chmod 0600 /etc/pgbouncer/userlist.txt
        chown -R {{ pg_dbsu }}:postgres /var/run/pgbouncer /var/log/pgbouncer /etc/pgbouncer



#==============================================================#
# Launch pgbouncer
#==============================================================#
- name: Launch pgbouncer
  tags: pgbouncer_launch
  block:
    # pgbouncer systemd services
    - name: Copy pgbouncer systemd service
      copy: src=pgbouncer.service dest=/etc/systemd/system/pgbouncer.service owner=root mode=0644

    - name: Launch pgbouncer pool service
      systemd: name=pgbouncer state=restarted enabled=yes daemon_reload=yes

    - name: Wait for pgbouncer service online
      wait_for: host=localhost port={{ pgbouncer_port }} state=started timeout=10

    - name: Check pgbouncer service is ready
      become_user: "{{ pg_dbsu }}"
      command: /usr/pgsql/bin/pg_isready -p {{ pgbouncer_port }}

    - name: Check pgbouncer connectivity
      become_user: "{{ pg_dbsu }}"
      command: psql -w -p{{ pgbouncer_port }} -U {{ pg_default_username }} -d {{ pg_default_database }} -Atc 'SELECT 1;'

...