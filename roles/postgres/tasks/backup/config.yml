---
#------------------------------------------------------------------------------
# Config newly initialized database cluster
#------------------------------------------------------------------------------
- name: Config primary database cluster
  tags: pg_config
  when: pg_role == 'primary'
  any_errors_fatal: true
  block:
    # include postgresql.base.conf is a good idea if using your own conf
    - name: Copy primary default postgresql.conf
      copy:
        src: "{{ pg_conf_path | default(pg_default_conf) }}"
        dest: "{{ pg_data }}/postgresql.conf"
        owner: "{{ pg_dbsu }}"
        group: postgres
        mode: 0600

    # default hba are classified according to service role
    - name: Copy primary default pg_hba.conf
      copy:
        src: "{{ pg_hba_path | default(pg_default_hba) }}"
        dest: "{{ pg_data }}/pg_hba.conf"
        owner: "{{ pg_dbsu }}"
        group: postgres
        mode: 0600


    #------------------------------------------------------------------------------
    # Calculate mem parameters
    #------------------------------------------------------------------------------
    - name: Get config parameter page count
      command: getconf _PHYS_PAGES
      register: node_page_count  # half mem in pages

    - name: Get config parameter page size
      shell: getconf PAGE_SIZE
      register: node_page_size  # half mem in bytes

    - name: Tune shared buffer and work mem
      set_fact:   # max shared-buffer 32GB | max maintainance work mem 8GB
        pg_shared_buffers_bytes: "{{ ([((node_page_count.stdout|int) * (node_page_size.stdout|int) / 4) , 34359738368] | min)|int }}"
        pg_maintenance_work_mem_bytes: "{{ ([((node_page_count.stdout|int) * (node_page_size.stdout|int) / 16) , 8589934592] | min)|int }}"

    - name: Hanlde small size mem occasion
      when: pg_shared_buffers_bytes|int < 1073741824  # < 1GB
      set_fact:
        pg_shared_buffers: "128MB"
        pg_maintenance_work_mem: "32MB"

    - name: Calculate postgres mem params
      when: pg_shared_buffers_bytes|int >= 1073741824  # >= 1GB
      set_fact:
        pg_shared_buffers: "{{ (pg_shared_buffers_bytes|int / 1073741824)|round(0)|int }}GB"
        pg_maintenance_work_mem: "{{ (pg_maintenance_work_mem_bytes|int / 1048576)|round(0)|int }}MB"

    - name: Tune shared buffer and work mem
      set_fact:
        param_shared_buffers: "{{ ([((node_page_count.stdout|int) * (node_page_size.stdout|int) / 4) , 12884901888] | min)|int / 1073741824   }}"
        param_maintenance_work_mem: "{{ ([((node_page_count.stdout|int) * (node_page_size.stdout|int) / 4) , 12884901888] | min)|int / 1073741824 }}"


    #------------------------------------------------------------------------------
    # force chaning some parameters
    #------------------------------------------------------------------------------
    - name: Remove some important parameters
      lineinfile:
        path: "{{ pg_data }}/postgresql.conf"
        state: absent
        regexp: '^{{ item }}.*$'
      with_items:
        - cluster_name
        - port
        - listen_addresses
        - hot_standby
        - shared_buffers
        - maintenance_work_mem

    # override with new values
    - name: Override some important parameters
      lineinfile:
        path: "{{ pg_data }}/postgresql.conf"
        line: "{{ item }}"
      with_items:
        - "include_if_exists 'postgresql.base.conf'"
        - "cluster_name = '{{ pg_cluster }}'"
        - "listen_addresses = '{{ pg_listen_address }}'"
        - "port = {{ pg_port }}"
        - "hot_standby = on"
        - "shared_buffers = {{ pg_shared_buffers }}"
        - "maintenance_work_mem = {{ pg_maintenance_work_mem }}"
        - "search_path = {{ pg_default_search_path }}"
        - "shared_preload_libraries = {{ pg_shared_libraries }}"

...