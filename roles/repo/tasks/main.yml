#!/usr/bin/env ansible-playbook
---
#==============================================================#
# Init a local yum repo powered by a local nginx web server
# all necessary rpm packages are downloaded to accelerate
# cluster initialization, or in case that target machine does
# not have internet access.
#
# RPM packages are downloaded to /{{ repo_home }}/{{ repo_name }}.
# And it will skip download if all packages already exists
#
# Local yum repo url:  http://{{ repo_address }}/{{ repo_name }}/
#==============================================================#


#--------------------------------------------------------------#
# 1. Pre Flight
#--------------------------------------------------------------#
# create repo directory and check cache existence
- name: Create local repo directory
  tags: repo_dir
  file: path={{ repo_home }}/{{ repo_name }}/boot state=directory mode=0755

#--------------------------------------------------------------#
# 2. Upstream repo
#--------------------------------------------------------------#
# install upstream repo to download packages
# upstream repo are only installed when download is necessary
- name: Install upstream repos
  tags: repo_upstream
  block:
    # if repo_remove = true, existing repos will be moved to backup dir
    - name: Backup & remove existing repos
      shell:
        warn: no
        cmd: |
          mkdir -p /etc/yum.repos.d/backup;
          mv -f /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup/; true

    # add all upstream repos
    - name: Add required upstream repos
      yum_repository: "{{ item }}"
      with_items: "{{ repo_upstreams }}"


#--------------------------------------------------------------#
# 3. Prepare repo (if cache exists)
#--------------------------------------------------------------#
- name: Check local repo exists
  tags: repo_prepare
  block:
    # set repo_exist = true if local repo already exists
    - name: Check repo pkgs cache exists
      stat: path={{ repo_home }}/{{ repo_name }}/repo_complete
      register: repo_cache
    - set_fact:
        repo_exist: "{{ repo_cache.stat.exists }}"


- name: Prepare repo
  tags: repo_prepare
  when: repo_exist
  block:
    # if local yum cache exists, use it instead
    - name: Move upstream repo to backup
      shell: |
        mv -f /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup/; true

    # add local file repo
    - name: Add local file repos
      yum_repository:
        name: "{{ repo_name }}-local"
        description: CentOS-$releasever - Updates - Aliyun Mirror
        baseurl: "file://{{ repo_home }}/{{ repo_name }}"
        gpgcheck: no

    # this usually takes 1~2 minutes according to your network condition
    - name: Remake yum cache if not exists
      environment: "{{ proxy_env }}"
      shell: yum clean all; yum makecache;





#--------------------------------------------------------------#
# 4. Bootstrap
#--------------------------------------------------------------#
- name: Bootstrap repo server
  tags: repo_boot
  block:
    - name: Install boot packages
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - yum-utils
        - createrepo
        - ansible
        - nginx
        - wget


- name: Bootstrap repo server
  tags: repo_nginx
  block:
    - name: Render repo nginx server files
      template: src={{ item.src }} dest={{ item.dest }} mode=0644
      with_items:
        - {src: index.html.j2,    dest: /www/index.html}
        - {src: default.conf.j2,  dest: /etc/nginx/conf.d/default.conf}
        - {src: local.repo.j2,    dest: "/www/{{ repo_name }}.repo"}
        - {src: nginx.conf.j2,    dest: /etc/nginx/nginx.conf}

    - name: Disable selinux for repo server
      selinux: state=disabled

    - name: Launch repo nginx server
      systemd: name=nginx state=restarted enabled=yes daemon_reload=yes

    - name: Waits repo server online
      wait_for: host=localhost port=80 state=started



#--------------------------------------------------------------#
# 5. Download
#--------------------------------------------------------------#

# if repo cache flag file missing, or force rebuild repo, then download repo packages
- name: Download local repo packages
  tags: repo_download
  when: not repo_exist
  block:

    # download rpm from url
    - name: Download web url packages
      environment: "{{ proxy_env }}"
      get_url: dest={{ repo_home }}/{{ re0po_name }}/{{ item | basename }} url={{ item }}
      with_items: "{{ repo_url_packages }}"

    # download from upstream repo
    - name: Download repo packages
      environment: "{{ proxy_env }}"
      command:
        cmd: yum install --downloadonly --downloaddir={{ repo_home }}/{{ repo_name }} {{ item }}
        chdir: "{{ repo_home }}/{{ repo_name }}"
      with_items: "{{ repo_packages }}"

    # download rpm from url
    - name: Download repo pkgs and deps
      environment: "{{ proxy_env }}"
      command:
        cmd: repotrack {{ item }}
        chdir: "{{ repo_home }}/{{ repo_name }}"
      with_items: "{{ repo_packages }}"

    # create repo
    - name: Create local repo index
      command: createrepo {{ repo_home }}/{{ repo_name }}

    # set repo complete flag
    - name: Mark repo cache as valid
      copy: content=ok dest=/www/{{ repo_name }}/repo_complete


...