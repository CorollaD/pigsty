IMAGE_NAME = "centos/7"
N=3

Vagrant.configure("2") do |config|
    config.vm.box = IMAGE_NAME
    config.vm.box_check_update = false
    config.ssh.insert_key = false

    # meta node
    config.vm.define "meta", primary: true do |meta|
        meta.vm.hostname = "meta"
        meta.vm.network "private_network", ip: "10.10.10.10"
        meta.vm.provider "virtualbox" do |v|
            v.linked_clone = true
            v.customize [
                    "modifyvm", :id,
                    "--memory", 8192, "--cpus", "2",
                    "--nictype1", "virtio", "--nictype2", "virtio",
                    "--hwvirtex", "on", "--ioapic", "on", "--rtcuseutc", "on", "--vtxvpid", "on", "--largepages", "on"
                ]
        end
        meta.vm.provision "file", source: "../pkg", destination: "/vagrant/pkg"
        meta.vm.provision "shell", inline: "mkdir -p /www; rm -rf /www/pigsty; mv /vagrant/pkg /www/pigsty"
    end

    # node-1 ... node-N
    (1..N).each do |i|
        config.vm.define "node-#{i}" do |node|
            node.vm.box = IMAGE_NAME
            node.vm.network "private_network", ip: "10.10.10.#{i + 10}"
            node.vm.hostname = "node-#{i}"
            node.vm.provider "virtualbox" do |v|
                v.linked_clone = true
                v.customize [
                        "modifyvm", :id,
                        "--memory", 4096, "--cpus", "1",
                        "--nictype1", "virtio", "--nictype2", "virtio",
                        "--hwvirtex", "on", "--ioapic", "on", "--rtcuseutc", "on", "--vtxvpid", "on", "--largepages", "on"
                    ]
            end
            # node.vm.provision "shell", inline: "/vagrant/provision.sh"
        end
    end
end